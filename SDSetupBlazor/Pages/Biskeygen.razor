<!-- Copyright (c) 2018 noahc3
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
@page "/biskeygen"
@inject IJSRuntime jsRuntime
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject HttpClient Http




<BSCard CardType="CardType.Card">
    <BSCard CardType="CardType.Body">
        <h2 style="text-align:center">Derive BIS keys</h2>
        <h6 style="text-align:center">Key deriver by Simon</h6>

        <h4 style="margin-bottom:0.5em;text-align:center">Enter TSEC key</h4>
        <BSBasicInput InputType="InputType.Text" @bind-Value="tsecIn" style="text-align:center;font-family:monospace" placeholder="00000000000000000000000000000000"></BSBasicInput>

        <h4 style="margin-bottom:0.5em;text-align:center">Enter SBK key</h4>
        <BSBasicInput InputType="InputType.Text" @bind-Value="sbkIn" style="text-align:center;font-family:monospace" placeholder="00000000000000000000000000000000"></BSBasicInput>

        <br />

        <div class="divider" style="margin:auto;margin-bottom:3rem">
            <hr class="left" /><label>OR</label><hr class="right" />
            <h4 style="margin-bottom:0.5em;text-align:center">Upload Hekate fuse_cached.bin</h4>
            <div class="ui action input" style="margin-top:1rem">
                <input type="file" id="fileUpload1" />
            </div>
            <h4 style="margin-bottom:0.5em;text-align:center">Upload Hekate tsec_keys.bin</h4>
            <div class="ui action input" style="margin-top:1rem">
                <input type="file" id="fileUpload2" />
            </div>
        </div>


        <BSButton Color="Color.Danger" style="margin-bottom:1rem;" @onclick="@(() => deriveBisKeys())" IsBlock="true">Derive BIS Keys</BSButton>

        <h4 style="margin-bottom:0.5em;margin-top:2em;text-align:center">Output</h4>
        <BSBasicInput InputType="InputType.TextArea" style="text-align:center;height:12.6em;font-family:monospace" @bind-Value="output" IsReadonly="true"></BSBasicInput>
    </BSCard>
</BSCard>

@functions {

	private string tsecIn = "";
	private string sbkIn = "";
	private string output = "";

	private void Navigate(string url) {
		UriHelper.NavigateTo(url);
	}

	private async void deriveBisKeys() {
		string fusesB64 = await ZipHelpers.GetFileData(jsRuntime, "fileUpload1");
		string tsecB64 = await ZipHelpers.GetFileData(jsRuntime, "fileUpload2");

		if (fusesB64 != "Problem parsing input file." && tsecB64 != "Problem parsing input file.") {
			string _output = "";

			byte[] tsec = Convert.FromBase64String(tsecB64);
			byte[] fuses = Convert.FromBase64String(fusesB64);

			//verify the lengths
			bool errorFound = false;
			if (tsec.Length != 32) {
				errorFound = true;
				_output += "ERROR: Your tsec_keys.bin isn't the right size.\n";
			}

			if (fuses.Length != 768) {
				errorFound = true;
				_output += "ERROR: Your fuse_cached.bin isn't the right size.\n";
			}

			if (fuses[0x10] != 0x83) {
				errorFound = true;
				_output += "ERROR: Your fuse_cached.bin is not valid.\n";
			}


			if (errorFound) {
				output = _output;
			}else {
				try {
					tsecIn = BitConverter.ToString(tsec.Take(0x10).ToArray()).Replace("-", "");
					sbkIn = BitConverter.ToString(fuses.Skip(0xA4).Take(0x10).ToArray()).Replace("-", "");
					_output = biskeytool.deriveBisKeys(sbkIn, tsecIn);
					output = _output.Substring(0, _output.Length - 1);
				} catch (Exception e) {
					output = e.Message;
				}
				
			}
		} else if (tsecIn.Length == 32 && sbkIn.Length == 32) {
            Console.WriteLine("[INFO] Manual key input OK!");
			sbkIn = sbkIn.ToUpper();
			tsecIn = tsecIn.ToUpper();
			string _output = biskeytool.deriveBisKeys(sbkIn, tsecIn);
			output = _output.Substring(0, _output.Length - 1);
		} else {
			string _output = "";

			//something is wrong, start figuring out what.
			if (fusesB64 == "Problem parsing input file." && tsecB64 == "Problem parsing input file.") {
				//user didn't upload any files
				if (tsecIn.Length != 32) {
					_output += "ERROR: Your TSEC key isn't the right length.\n";
				}

				if (sbkIn.Length != 32) {
					_output += "ERROR: Your SBK key isn't the right length.\n";
				}
			} else {
				//user did upload files
				if (tsecB64 == "Problem parsing input file.") {
					_output += "ERROR: Your tsec_keys.bin file is missing or corrupt.\n";
				}

				if (fusesB64 == "Problem parsing input file.") {
					_output += "ERROR: Your fuses.bin file is missing or corrupt.\n";
				}
			}

			output = _output;
		}

		StateHasChanged();
	}
}
