<!-- Copyright (c) 2018 noahc3
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
@page "/credits"
<h1 style="text-align:center">Credits</h1>
<h3>Package Credits</h3>
@if (G.initialized && localInit) {
<div class="ui styled fluid accordion" style="margin-top:1.5em">

    @foreach (Platform plat in G.manifest.Platforms.Values) {
        if (!plat.Visible) { continue; }
        <div class="accordion">
            <BSCard CardType="CardType.Card">
                <BSCard CardType="CardType.Header"><BSButton ButtonType="ButtonType.Button" OnClick="@(() => opened[plat.ID] = !opened[plat.ID])" Color="Color.None" Class="btn-link">@plat.Name</BSButton></BSCard>
                <BSCollapse IsOpen="@opened[plat.ID]">
                    <BSCard CardType="CardType.Body">
                        <BSTable IsResponsive="true" IsSmall="true" IsStriped="true" IsBordered="true">
                            <BSTableHead>
                                <BSTableRow>
                                    <BSTableHeadCell scope="col">Package Name</BSTableHeadCell>
                                    <BSTableHeadCell scope="col">Authors</BSTableHeadCell>
                                    <BSTableHeadCell scope="col">Version</BSTableHeadCell>
                                    <BSTableHeadCell scope="col">Source</BSTableHeadCell>
                                    <BSTableHeadCell scope="col">Auto Updates</BSTableHeadCell>
                                </BSTableRow>
                            </BSTableHead>
                            <tbody>
                                @foreach (Package p in G.packages[plat.ID].Values) {
                                    if (String.IsNullOrEmpty(p.Authors) || !p.Visible || !p.ShowsInCredits) { continue; }
                                    <BSTableRow>
                                        <BSTableHeadCell scope="row">@p.Name</BSTableHeadCell>
                                        <BSTableCell>@p.Authors</BSTableCell>
                                        <BSTableCell>@p.Versions[G.channel]</BSTableCell>
                                        <BSTableCell>@if (@p.Source.Contains("https://") || p.Source.Contains("http://")) {<a href="@p.Source">@p.Source</a>} else {@p.Source}</BSTableCell>
                                        <BSTableCell style="text-align:center">
                                            @if (p.AutoUpdateType > 0) {
                                                <span style="color:#00ff90">✓</span>
                                            } else {
                                                <span style="color:#c83030">✗</span>
                                            }
                                        </BSTableCell>
                                    </BSTableRow>
                                }

                            </tbody>
                        </BSTable>
                    </BSCard>
                </BSCollapse>
            </BSCard>
        </div>
    }
</div>
	} else {
	<h4>Loading, please shrek...</h4>
	}

	<h3>Credits</h3>

	<ul class="ui list">
        <li>The AtlasSex team.</li>
		<li>Steve Sanderson and Microsoft for <a href="https://blazor.net/">Blazor</a></li>
        <li>Chanan Braunstein and jbomhold3 for <a href="https://github.com/chanan/BlazorStrap">BlazorStrap</a></li>
		<li>Joonas W. for <a href="https://joonasw.net/view/csharp-await-and-js-promises-in-blazor">Using C# await against JS Promises in Blazor</a></li>
	    <li>Hax4dayz for forking the webpage and making this shit happen <a href="https://github.com/hax4dazy"></a></li>
    </ul>

@functions {
	Dictionary<string, bool> opened = new Dictionary<string, bool>();
	public static Action ForceUiUpdate;
	private bool localInit = false;

	protected override async Task OnInitializedAsync() {
		foreach (Platform plat in G.manifest.Platforms.Values) opened[plat.ID] = false;
		ForceUiUpdate = new Action(() => StateHasChanged());
		localInit = true;
	}
}
