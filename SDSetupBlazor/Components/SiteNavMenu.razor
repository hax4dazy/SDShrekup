@inject NavigationManager uriHelper
@inject IBootstrapCSS BootstrapCSS
@inject LocalStorage localStorage

<BSNavbar IsExpand="true" Color="Color.Danger" IsDark="true">
    <BSNavbarToggler @onclick="MenuOpenClick" />
    <BSNavbarBrand Href="/"><img class="ui small image logo-blend-nc3" src="/img/logo.png" style="display:block;margin-left:auto;margin-right:auto;"></BSNavbarBrand>
    <BSCollapse isOpen="@MenuOpen" IsNavbar="true" IsOpenChanged="OpenMenu">
        <BSNav IsList="true" Class="mr-auto" IsNavbar="true">
            @foreach (Platform k in G.manifest.Platforms.Values) {
                if (!k.Visible) { continue; }
                <BSNavItem>
                    <BSNavLink Href="@("/console?" + k.ID)">@k.MenuName</BSNavLink>
                </BSNavItem>
            }
            <BSNavItem><BSNavLink Href="/faq">FAQ</BSNavLink></BSNavItem>
            <BSNavItem><BSNavLink Href="/credits">Credits</BSNavLink></BSNavItem>
        </BSNav>
        <BSNav IsList="true" IsNavbar="true" Class="my-2 my-lg-0">
            <BSNavItem IsDropdown="true">
                <BSDropdownToggle IsOpen="ThemeDropdownOpen" OnClick="ThemeDropdownOpenClick">Theme</BSDropdownToggle>
                <BSDropdownMenu IsOpen="ThemeDropdownOpen" AutoClose="true">
                    <BSDropdownItem Href="javascript:void(0);" OnClick="@(() => { SetTheme("flatly"); })">Light</BSDropdownItem>
                    <BSDropdownItem Href="javascript:void(0);" OnClick="@(() => { SetTheme("darkly"); })">Dark</BSDropdownItem>
                </BSDropdownMenu>
            </BSNavItem>
            <BSNavItem><BSNavLink Href="https://switch.homebrew.guide/donate">Donate</BSNavLink></BSNavItem>
            <BSNavItem><BSNavLink Href="https://switch.homebrew.guide/">Guide</BSNavLink></BSNavItem>
            <BSNavItem><BSNavLink Href="https://github.com/noahc3/SDSetup/issues">Issues</BSNavLink></BSNavItem>
        </BSNav>
        <BSNav IsList="true" IsNavbar="true" Class="my-2 my-lg-0">
            <BSNavItem><BSNavLink Href="https://discord.teamatlasnx.com"><span class="iconify" style="max-width:2rem;max-height:2rem" data-icon="simple-icons:discord" data-inline="false" data-width="2rem" data-height="2rem"></span></BSNavLink></BSNavItem>
        </BSNav>
        <BSNav IsList="true" IsNavbar="true" Class="my-2 my-lg-0">
            <BSNavItem><BSNavLink Href="https://github.com/noahc3/SDSetup/"><span class="iconify" style="max-width:2rem;max-height:2rem" data-icon="bytesize:github" data-inline="false" data-width="2rem" data-height="2rem"></span></BSNavLink></BSNavItem>
        </BSNav>
    </BSCollapse>
</BSNavbar>

@code {

    string CurrentTheme = "flatly";

    bool MenuOpen { get; set; } = false;

    protected override async Task OnInitializedAsync() {
        string theme = localStorage.GetItem("theme");

        if (string.IsNullOrWhiteSpace(theme)) {
            CurrentTheme = "flatly";
        }
    }

    void OpenMenu(bool e) {
        MenuOpen = e;
        InvokeAsync(StateHasChanged);
    }

    void MenuOpenClick(MouseEventArgs e) {
        MenuOpen = !MenuOpen;
        StateHasChanged();
    }

    bool ThemeDropdownOpen { get; set; } = false;

    void ThemeDropdownOpenChanged(bool e) {
        ThemeDropdownOpen = e;
        InvokeAsync(StateHasChanged);
    }

    void ThemeDropdownOpenClick(MouseEventArgs e) {
        ThemeDropdownOpen = !ThemeDropdownOpen;
        StateHasChanged();
    }

    void SetTheme(string theme) {
        CurrentTheme = theme;
        BootstrapCSS.SetBootstrapCSS(theme, "4.3.1");
        localStorage.SetItem("theme", theme);
        ThemeDropdownOpen = false;
    }
}